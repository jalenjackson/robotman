<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r75/three.min.js"></script>
<script src = "https://cdnjs.cloudflare.com/ajax/libs/gsap/1.18.0/TweenMax.min.js"></script>
<style>


  html,body {
    margin: 0;
    padding: 0;
    overflow-x:hidden;
    background: black;
    margin-left: 10px;
  }

  body::-webkit-scrollbar {
    width: 1em;
  }

  body::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.1);
  }

  body::-webkit-scrollbar-thumb {
    background-color: none;
    outline: 1px solid slategrey;
  }

  body {
  }

    .showing-letters {
      opacity: 0;
    }

    #threejs {
      width: 100%;
      height: 100%;
      position: absolute;
      top:0;
      left: 0;
      background: radial-gradient(ellipse farthest-side at 100% 100%, rgb(20,20,20) 10%, rgb(50,50,50) 50%, black 120%);

    }

    #threejs h1 {
      color: white;
      font-size: 50px;
      font-family: "Helvetica Neue", Helvetica, Arial, Sans-Serif;
      position: absolute;
      left: 100px;
      top: 90px;
      width: 600px;
      opacity: 0;
      transform: translateY(30px);
      transition: transform 1s ease-in-out, opacity 1s ease-in-out;
      z-index:9999999999999999999999999999999999999999;
      pointer-events: none;
    }

    .your-name {
      width: 80%;
      height: 150px;
      border: none;
      color: black;
      font-family: "Helvetica Neue", Helvetica, Arial, Sans-Serif;
      font-size: 40px;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      margin: auto;
      opacity: 0;
      transform: translateY(30px);
      color: white;
      text-transform: uppercase;
      background: rgba(255,255,255,0.1);
      border-radius: .2em;
      padding-left: 50px;
      transition: transform 1s ease-in-out, opacity 1s ease-in-out;

    }

    * {
      outline: none;
    }

    .spreaded img {
      position: absolute;
      top:0;
      left: 0;
      width: auto;
      height: auto;
      filter:  blur(5px);
    }

    .form  {
      position: absolute;
      top:0;
      left: 0;
      bottom: 0;
      right: 0;
      margin: auto;
      height: 200px;
      display: none;
      opacity: 0;
      transform: translateY(0px);
      transition: opacity 300ms ease-in-out , transform 300ms ease-in-out;


    }

    .form input{
      width: 70%;
      height: 100px;
      background: rgba(255,255,255,0.1);
      color: white;
      padding-left: 30px;
      font-size: 50px;
      font-family: "Helvetica Neue", Helvetica, Arial, Sans-Serif;
      border:none;
      border-radius: .2em;
      margin-top: 10px;
      margin-left: 40px;
      display: block;
    }

    .form button {
      margin-left: 40px;
      width: 200px;
      height: 30px;
      color: white;
      text-transform: uppercase;
      background: rgba(255,255,255,0.1);
      text-transform: uppercase;
      font-family: "Helvetica Neue", Helvetica, Arial, Sans-Serif;
      cursor: pointer;
      border-radius: .3em;
      background: limegreen;
      border:none;
      font-size: 20px;
    }

    .container, #map {
      position: absolute;
      top: 100px;
      pointer-events: none;
    }

    #map {
      height: 600px;
      width: 100px;
      opacity: 1;
      display: block;
      position: absolute;
      top:0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
      transition: opacity 300ms ease-in-out;
    }

    .map{
      z-index: 999999999999999;
      width: 100%;
      height: 100%;
      display:block;
      opacity: 0;
      pointer-events: none;
      pointer-events: none;
    }

    .close {
      position: fixed;
      right: 50px;
      top: 30px;
      z-index: 99999999999999999999;
      width: 50px;
      height: 50px;
      color: white;
      font-size: 70px;
      font-family: "Helvetica Neue", Helvetica, Arial, Sans-Serif;
      cursor: pointer;
      transition: opacity 300ms ease-in-out;
      opacity: 0;
    }


    .container {
      width: 100%;
      margin-top: 90vh;
      z-index: 99999999999999999999999999999999;
    }

    .container img {
      width: 50%;
      height: 400px;
      display: inline-block;
    }

</style>



<p class="showing-letters"></p>
<div id="threejs">
  <h1></h1>
  <input class="your-name" type="text" placeholder="Your Name">

  <div class="form">
    <input class="text-field" placeholder="Enter A Command" type="text"/>
    <button onclick="sendCommand();" class="button" type="button">Ask</button>
  </div>
  <div id="container" class="container"></div>

</div>

<div class="map">
  <div id="map"></div>
</div>
<div class="close">X</div>

<script>

  $(".close").click(function(){
     $(".map").css({opacity: "0"});

     setTimeout(function(){
         $(".close").css({opacity: "0"})
     },1000)
  });

  var command = {
      sickness: "sick",
      gifs: "gifs",
      time: "time",
  };

  function sendCommand(e) {
      var message = $(".text-field").val();
      var inputField = $(".text-field");
      var button = $(".button");
      var form = $(".form");

      inputField.on("keyup", function () {
          message = inputField.val();
      });

      //sickness training set
      if (message.indexOf(command.sickness) !== -1) {
          console.log($(".degree-amount").length)
          if($(".degree-amount").length !== 1){
              createElements($(".your-name").val() + " Let me find out if you are sick. What is your current temperature in degrees?", "Check Sickness", "degree-amount", "Ask", "submit-degrees", '/get_sickness', 0);
          }
      } else if(message.indexOf(command.gifs) !== -1){
          if($(".search-gif").length !== 1) {
              createElements($(".your-name").val() + ", I would love to show you some amazing gifs. Please search below", "Search Gif", "search-gif", "Search", "submit-gif", 0, 1);
          }
      } else if(message.indexOf(command.time) !== -1){
          talk($(".your-name").val() + " The current time is <%= Time.now.strftime('%d/%m/%Y and it is %H:%M') %> ", 5000)
      } else if(message.indexOf(command.location) !== -1){
        talk($(".your-name").val() + " This is your current location", 5000);
        $(".map, .close").css({opacity: "1", pointerEvents: "auto"});
      } else {
          talk($(".your-name").val() + " Sorry, i didn't understand what you said", 5000)
      }
  }


  function createElements(message, inputName, inputClassName, buttonName, buttonClassName, ajaxUrl = 0 , id = 0 ) {
      talk(message, 6000);
      createInput(inputName, inputClassName);
      createButton(buttonName, buttonClassName);
      var input = $(`.${inputClassName}`);
      var button = $(`.${buttonClassName}`);

      if (ajaxUrl !== 0) {
          button.click(function () {
              sendAjax(ajaxUrl, input.val());
          });
      }

      if(id==1){
        getGifs(inputClassName, buttonClassName);
      }
  }



  function getGifs(inputClassName, buttonClassName){
      var url = "https://api.giphy.com/v1/gifs/search?q=";
      var search;
      var endpoint = "&api_key=cAYacUSolHAPjwxXp8eIq5YhF5yjD5Ux";
      var isDataUndefined;

      $(`.${inputClassName}`).on("keyup", function(){
          search = $(this).val();
      });

      $(`.${buttonClassName}`).on("click", function(){
          $(".container").html("");
          $.getJSON(url + search + endpoint, function(data){
              if(data.data.length == 0) {
                  isDataUndefined = true;
              } else {
                  isDataUndefined = false;
                  for (var i = 0; i <= 23; i++) {
                      var img = $(`<a download='custom-filename.jpg' href="${data.data[i].images.original.url}"><img src="${data.data[i].images.original.url}" class='giphy'/></a>`);
                      img.addClass("giphy" + i);
                      img.appendTo(".container");
                  }
              }
          });

          if(isDataUndefined){
              talk("I was unable to find any gifs with those keywords" )
          } else {
              talk("Scroll down to see your amazing gifs of" + $(`.${inputClassName}`).val())
          }
      });
  }

  function createButton(inner, data){
      var nameOfClass = data;
      $(".form").append(`<button type='button' class=${nameOfClass}>${inner}</button>`);
  }

  function createInput(words, data){
      var nameOfClass = data;
      $(".form").append(`<input placeholder="${words}" type='text' class=${nameOfClass}>`);
  }

  function sendAjax(url, data){
      var response;
      $.ajax({
          url: url,
          type: 'POST',
          data: {value: data},
          dataType: "json",
          success: function(data){
              console.log(data);
              response = data.sickness;
              talk(response, 6000);
          },
          error: function(){
              alert("There was an error with your request");
          }
      });
  }


  let voices, utterance;


  function talk(words, fadeOutWordsTime = 0){
      utterance = new SpeechSynthesisUtterance(words);
      utterance.voice = voices[7];
      window.speechSynthesis.speak(utterance);

      light.color.setHex( 0xff0000 );


      $("#threejs h1").html(words).css({
          opacity: "1",
          transform: "translateY(0px)"
      });
      setTimeout(function(){
          $("#threejs h1").css({
              opacity: "0",
              transform: "translateY(30px)"
          });
          light.color.setHex( 0xffffff );
      },fadeOutWordsTime);
  }

  speechSynthesis.addEventListener('voiceschanged', function() {
      voices = this.getVoices();
      talk("Hello, Robot Man here, i am a work in progress by a cool developer named Jalen. I would like to know what is your name?", 6000);

      setTimeout(function(){
          $("#threejs input").css({
              opacity: "1",
              transform: "translateY(0px)"
          });


          $(".your-name").keypress(function(e) {
              if(e.which == 13) {
                  $(".your-name").css({
                      opacity: "0",
                      transform: "translateY(30px)"
                  });
                  talk("Great i will call you" + $(".your-name").val());
              }
              setTimeout(function(){
                  $(".your-name").css({display: "none"});
                  $(".form").css({
                      display: "block"
                  });
              },3000);
              setTimeout(function(){
                  $(".form").css({
                      opacity: "1",
                      transform: "translateY(0px)"
                  },5000);
              })
          });
      },7000);

  });


      var addMesh, animate, camera, clock, container, controls, draw, mesh, renderer, rotate, scene, start;
      scene = void 0;
      camera = void 0;
      renderer = void 0;
      container = void 0;
      controls = void 0;
      clock = void 0;
      mesh = void 0;
      rotate = true;
      start = function() {
          var ASPECT, FAR, NEAR, SCREEN_HEIGHT, SCREEN_WIDTH, VIEW_ANGLE;
          scene = new THREE.Scene;
          VIEW_ANGLE = 45;
          NEAR = 0.1;
          FAR = 10000;
          SCREEN_WIDTH = window.innerWidth;
          SCREEN_HEIGHT = window.innerHeight;
          ASPECT = SCREEN_WIDTH / SCREEN_HEIGHT;
          camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);
          camera.position.set(27.82504298529939, 14.02121980722944, 10.02178601347767);
          camera.rotation.set(-2.4020274682629177, 0.6097939469542306, 2.6601321578044113);
          camera.lookAt(scene.position);
          scene.add(camera);
          renderer = new THREE.WebGLRenderer({
              antialias: true,
              alpha: true
          });
          renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);
          container = document.getElementById('threejs');
          container.appendChild(renderer.domElement);
          clock = new THREE.Clock;
      };
      var hemiLight, jsonLoader, light;
      draw = function() {
          light = new THREE.DirectionalLight(0xff0000, 100);
          light.position.set(50, 0, 500);
          light.castShadow = true;
          scene.add(light);
          jsonLoader = new THREE.ObjectLoader;
          return jsonLoader.load('blender-threejs/blender.json', addMesh);
      };
      var myObj;
      addMesh = function(object) {
          myObj = object;
          var materialObj = new THREE.MeshNormalMaterial({
              vertexColors: THREE.FaceColors,
              overdraw: 0.5
          });
          object.traverse(function(child) {
              if (child instanceof THREE.Mesh) {
                  child.geometry.computeVertexNormals;
              }
          });
          object.position.set(-10,-25,-5);
          object.rotateY(10);
          object.scale.set(10,10,10);
          // then directly add the object
          return scene.add(object);
      };
      animate = function() {
          requestAnimationFrame(animate);
          myObj.rotation.y += 0.001;
          return renderer.render(scene, camera);
      };
      start();
      var delay = 2000; //milliseconds
      var timeoutId;
      var animationIsFinished = false;
      draw();
      animate();

</script>
